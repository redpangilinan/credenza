{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "credenza",
  "type": "registry:component",
  "title": "Credenza",
  "description": "Ready-made responsive modal component",
  "registryDependencies": [
    "dialog",
    "drawer",
    "use-mobile"
  ],
  "files": [
    {
      "path": "src/components/ui/credenza.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport {\r\n\tDialog,\r\n\tDialogClose,\r\n\tDialogContent,\r\n\tDialogDescription,\r\n\tDialogFooter,\r\n\tDialogHeader,\r\n\tDialogTitle,\r\n\tDialogTrigger,\r\n} from \"@/components/ui/dialog\";\r\nimport {\r\n\tDrawer,\r\n\tDrawerClose,\r\n\tDrawerContent,\r\n\tDrawerDescription,\r\n\tDrawerFooter,\r\n\tDrawerHeader,\r\n\tDrawerTitle,\r\n\tDrawerTrigger,\r\n} from \"@/components/ui/drawer\";\r\nimport { useIsMobile } from \"@/hooks/use-mobile\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface BaseProps {\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\ninterface RootCredenzaProps extends BaseProps {\r\n\topen?: boolean;\r\n\tonOpenChange?: (open: boolean) => void;\r\n}\r\n\r\ninterface CredenzaProps extends BaseProps {\r\n\tclassName?: string;\r\n\tasChild?: true;\r\n}\r\n\r\nconst CredenzaContext = React.createContext<{ isMobile: boolean }>({\r\n\tisMobile: false,\r\n});\r\n\r\nconst useCredenzaContext = () => {\r\n\tconst context = React.useContext(CredenzaContext);\r\n\tif (!context) {\r\n\t\tthrow new Error(\r\n\t\t\t\"Credenza components cannot be rendered outside the Credenza Context\",\r\n\t\t);\r\n\t}\r\n\treturn context;\r\n};\r\n\r\nconst Credenza = ({ children, ...props }: RootCredenzaProps) => {\r\n\tconst isMobile = useIsMobile();\r\n\tconst Credenza = isMobile ? Drawer : Dialog;\r\n\r\n\treturn (\r\n\t\t<CredenzaContext.Provider value={{ isMobile }}>\r\n\t\t\t<Credenza {...props} {...(isMobile && { autoFocus: true })}>\r\n\t\t\t\t{children}\r\n\t\t\t</Credenza>\r\n\t\t</CredenzaContext.Provider>\r\n\t);\r\n};\r\n\r\nconst CredenzaTrigger = ({ className, children, ...props }: CredenzaProps) => {\r\n\tconst { isMobile } = useCredenzaContext();\r\n\tconst CredenzaTrigger = isMobile ? DrawerTrigger : DialogTrigger;\r\n\r\n\treturn (\r\n\t\t<CredenzaTrigger className={className} {...props}>\r\n\t\t\t{children}\r\n\t\t</CredenzaTrigger>\r\n\t);\r\n};\r\n\r\nconst CredenzaClose = ({ className, children, ...props }: CredenzaProps) => {\r\n\tconst { isMobile } = useCredenzaContext();\r\n\tconst CredenzaClose = isMobile ? DrawerClose : DialogClose;\r\n\r\n\treturn (\r\n\t\t<CredenzaClose className={className} {...props}>\r\n\t\t\t{children}\r\n\t\t</CredenzaClose>\r\n\t);\r\n};\r\n\r\nconst CredenzaContent = ({ className, children, ...props }: CredenzaProps) => {\r\n\tconst { isMobile } = useCredenzaContext();\r\n\tconst CredenzaContent = isMobile ? DrawerContent : DialogContent;\r\n\r\n\treturn (\r\n\t\t<CredenzaContent className={className} {...props}>\r\n\t\t\t{children}\r\n\t\t</CredenzaContent>\r\n\t);\r\n};\r\n\r\nconst CredenzaDescription = ({\r\n\tclassName,\r\n\tchildren,\r\n\t...props\r\n}: CredenzaProps) => {\r\n\tconst { isMobile } = useCredenzaContext();\r\n\tconst CredenzaDescription = isMobile ? DrawerDescription : DialogDescription;\r\n\r\n\treturn (\r\n\t\t<CredenzaDescription className={className} {...props}>\r\n\t\t\t{children}\r\n\t\t</CredenzaDescription>\r\n\t);\r\n};\r\n\r\nconst CredenzaHeader = ({ className, children, ...props }: CredenzaProps) => {\r\n\tconst { isMobile } = useCredenzaContext();\r\n\tconst CredenzaHeader = isMobile ? DrawerHeader : DialogHeader;\r\n\r\n\treturn (\r\n\t\t<CredenzaHeader className={className} {...props}>\r\n\t\t\t{children}\r\n\t\t</CredenzaHeader>\r\n\t);\r\n};\r\n\r\nconst CredenzaTitle = ({ className, children, ...props }: CredenzaProps) => {\r\n\tconst { isMobile } = useCredenzaContext();\r\n\tconst CredenzaTitle = isMobile ? DrawerTitle : DialogTitle;\r\n\r\n\treturn (\r\n\t\t<CredenzaTitle className={className} {...props}>\r\n\t\t\t{children}\r\n\t\t</CredenzaTitle>\r\n\t);\r\n};\r\n\r\nconst CredenzaBody = ({ className, children, ...props }: CredenzaProps) => {\r\n\treturn (\r\n\t\t<div className={cn(\"px-4 md:px-0\", className)} {...props}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst CredenzaFooter = ({ className, children, ...props }: CredenzaProps) => {\r\n\tconst { isMobile } = useCredenzaContext();\r\n\tconst CredenzaFooter = isMobile ? DrawerFooter : DialogFooter;\r\n\r\n\treturn (\r\n\t\t<CredenzaFooter className={className} {...props}>\r\n\t\t\t{children}\r\n\t\t</CredenzaFooter>\r\n\t);\r\n};\r\n\r\nexport {\r\n\tCredenza,\r\n\tCredenzaTrigger,\r\n\tCredenzaClose,\r\n\tCredenzaContent,\r\n\tCredenzaDescription,\r\n\tCredenzaHeader,\r\n\tCredenzaTitle,\r\n\tCredenzaBody,\r\n\tCredenzaFooter,\r\n};\r\n",
      "type": "registry:component"
    }
  ]
}