{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "credenza",
  "type": "registry:component",
  "title": "Credenza",
  "description": "Ready-made responsive modal component",
  "registryDependencies": [
    "dialog",
    "drawer",
    "use-mobile"
  ],
  "files": [
    {
      "path": "src/components/ui/credenza.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\"\nimport {\n  Drawer,\n  DrawerClose,\n  DrawerContent,\n  DrawerDescription,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerTitle,\n  DrawerTrigger,\n} from \"@/components/ui/drawer\"\n\ninterface BaseProps {\n  children: React.ReactNode\n}\n\ninterface RootCredenzaProps extends BaseProps {\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}\n\ninterface CredenzaProps extends BaseProps {\n  className?: string\n  asChild?: true\n}\n\nconst CredenzaContext = React.createContext<{ isMobile: boolean }>({\n  isMobile: false,\n})\n\nconst useCredenzaContext = () => {\n  const context = React.useContext(CredenzaContext)\n  if (!context) {\n    throw new Error(\n      \"Credenza components cannot be rendered outside the Credenza Context\"\n    )\n  }\n  return context\n}\n\nconst Credenza = ({ children, ...props }: RootCredenzaProps) => {\n  const isMobile = useIsMobile()\n  const Credenza = isMobile ? Drawer : Dialog\n\n  return (\n    <CredenzaContext.Provider value={{ isMobile }}>\n      <Credenza {...props} {...(isMobile && { autoFocus: true })}>\n        {children}\n      </Credenza>\n    </CredenzaContext.Provider>\n  )\n}\n\nconst CredenzaTrigger = ({ className, children, ...props }: CredenzaProps) => {\n  const { isMobile } = useCredenzaContext()\n  const CredenzaTrigger = isMobile ? DrawerTrigger : DialogTrigger\n\n  return (\n    <CredenzaTrigger className={className} {...props}>\n      {children}\n    </CredenzaTrigger>\n  )\n}\n\nconst CredenzaClose = ({ className, children, ...props }: CredenzaProps) => {\n  const { isMobile } = useCredenzaContext()\n  const CredenzaClose = isMobile ? DrawerClose : DialogClose\n\n  return (\n    <CredenzaClose className={className} {...props}>\n      {children}\n    </CredenzaClose>\n  )\n}\n\nconst CredenzaContent = ({ className, children, ...props }: CredenzaProps) => {\n  const { isMobile } = useCredenzaContext()\n  const CredenzaContent = isMobile ? DrawerContent : DialogContent\n\n  return (\n    <CredenzaContent className={className} {...props}>\n      {children}\n    </CredenzaContent>\n  )\n}\n\nconst CredenzaDescription = ({\n  className,\n  children,\n  ...props\n}: CredenzaProps) => {\n  const { isMobile } = useCredenzaContext()\n  const CredenzaDescription = isMobile ? DrawerDescription : DialogDescription\n\n  return (\n    <CredenzaDescription className={className} {...props}>\n      {children}\n    </CredenzaDescription>\n  )\n}\n\nconst CredenzaHeader = ({ className, children, ...props }: CredenzaProps) => {\n  const { isMobile } = useCredenzaContext()\n  const CredenzaHeader = isMobile ? DrawerHeader : DialogHeader\n\n  return (\n    <CredenzaHeader className={className} {...props}>\n      {children}\n    </CredenzaHeader>\n  )\n}\n\nconst CredenzaTitle = ({ className, children, ...props }: CredenzaProps) => {\n  const { isMobile } = useCredenzaContext()\n  const CredenzaTitle = isMobile ? DrawerTitle : DialogTitle\n\n  return (\n    <CredenzaTitle className={className} {...props}>\n      {children}\n    </CredenzaTitle>\n  )\n}\n\nconst CredenzaBody = ({ className, children, ...props }: CredenzaProps) => {\n  return (\n    <div className={cn(\"px-4 md:px-0\", className)} {...props}>\n      {children}\n    </div>\n  )\n}\n\nconst CredenzaFooter = ({ className, children, ...props }: CredenzaProps) => {\n  const { isMobile } = useCredenzaContext()\n  const CredenzaFooter = isMobile ? DrawerFooter : DialogFooter\n\n  return (\n    <CredenzaFooter className={className} {...props}>\n      {children}\n    </CredenzaFooter>\n  )\n}\n\nexport {\n  Credenza,\n  CredenzaTrigger,\n  CredenzaClose,\n  CredenzaContent,\n  CredenzaDescription,\n  CredenzaHeader,\n  CredenzaTitle,\n  CredenzaBody,\n  CredenzaFooter,\n}\n",
      "type": "registry:component"
    }
  ]
}